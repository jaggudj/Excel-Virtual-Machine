GlobalParse
  [Declare ("main",Function2 Int);
   Assign
     (V (Var ("main",Function2 Int)),
      Function
        (Int,[],
         Block
           [Declare ("str1",TypeDef (Array (1,Byte)));
            Assign
              (V (Var ("str1",TypeDef (Array (1,Byte)))),
               Apply
                 (V (Var
                       ("\stack_alloc",Function ([Int],TypeDef (Array (1,Byte))))),
                  [V (Lit ("12",Int))]));
            Assign
              (V (Var ("str1",TypeDef (Array (1,Byte)))),
               V (Lit (""Hello"",Ptr Byte)));
            Declare ("str2",TypeDef (Array (1,Byte)));
            Assign
              (V (Var ("str2",TypeDef (Array (1,Byte)))),
               Apply
                 (V (Var
                       ("\stack_alloc",Function ([Int],TypeDef (Array (1,Byte))))),
                  [V (Lit ("12",Int))]));
            Assign
              (V (Var ("str2",TypeDef (Array (1,Byte)))),
               V (Lit (""World"",Ptr Byte)));
            Declare ("str3",TypeDef (Array (1,Byte)));
            Assign
              (V (Var ("str3",TypeDef (Array (1,Byte)))),
               Apply
                 (V (Var
                       ("\stack_alloc",Function ([Int],TypeDef (Array (1,Byte))))),
                  [V (Lit ("12",Int))])); Declare ("len",Int);
            Apply
              (V (Var ("strcpy",T (0,Value is not created.))),
               [V (Var ("str3",T (0,Value is not created.)));
                V (Var ("str1",T (0,Value is not created.)))]);
            Apply
              (V (Var ("printf",T (0,Value is not created.))),
               [V (Lit (""strcpy( str3, str1) :  %s
"",Ptr Byte));
                V (Var ("str3",T (0,Value is not created.)))]);
            Apply
              (V (Var ("strcat",T (0,Value is not created.))),
               [V (Var ("str1",T (0,Value is not created.)));
                V (Var ("str2",T (0,Value is not created.)))]);
            Apply
              (V (Var ("printf",T (0,Value is not created.))),
               [V (Lit (""strcat( str1, str2):   %s
"",Ptr Byte));
                V (Var ("str1",T (0,Value is not created.)))]);
            Assign
              (V (Var ("len",T (0,Value is not created.))),
               Apply
                 (V (Var ("strlen",T (0,Value is not created.))),
                  [V (Var ("str1",T (0,Value is not created.)))]));
            Apply
              (V (Var ("printf",T (0,Value is not created.))),
               [V (Lit (""strlen(str1) :  %d
"",Ptr Byte));
                V (Var ("len",T (0,Value is not created.)))]);
            Return (V (Lit ("0",Int)))]))]
GlobalParse
  [Declare ("a",Int); Declare ("b",Int); Declare ("c",Int); Declare ("f",Float);
   Declare ("main",Function2 Int);
   Assign
     (V (Var ("main",Function2 Int)),
      Function
        (Int,[],
         Block
           [Declare ("a",Int); Declare ("b",Int); Declare ("c",Int);
            Declare ("f",Float);
            Assign
              (V (Var ("a",T (0,Value is not created.))),V (Lit ("10",Int)));
            Assign
              (V (Var ("b",T (0,Value is not created.))),V (Lit ("20",Int)));
            Assign
              (V (Var ("c",T (0,Value is not created.))),
               Apply
                 (V (Var
                       ("+",
                        Function
                          ([T (0,Value is not created.);
                            T (0,Value is not created.)],
                           T (0,Value is not created.)))),
                  [V (Var ("a",T (0,Value is not created.)));
                   V (Var ("b",T (0,Value is not created.)))]));
            Apply
              (V (Var ("printf",T (0,Value is not created.))),
               [V (Lit (""value of c : %d 
"",Ptr Byte));
                V (Var ("c",T (0,Value is not created.)))]);
            Assign
              (V (Var ("f",T (0,Value is not created.))),
               Apply
                 (V (Var
                       ("/",
                        Function
                          ([T (0,Value is not created.);
                            T (0,Value is not created.)],
                           T (0,Value is not created.)))),
                  [V (Lit ("70",Double)); V (Lit ("3",Double))]));
            Apply
              (V (Var ("printf",T (0,Value is not created.))),
               [V (Lit (""value of f : %f 
"",Ptr Byte));
                V (Var ("f",T (0,Value is not created.)))]);
            Return (V (Lit ("0",Int)))]))]
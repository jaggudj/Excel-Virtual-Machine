GlobalParse
  [DeclareHelper
     [Declare ("main",Function2 Int);
      Assign
        (Value (Var ("main",Function2 Int)),
         Function
           ([],
            Block
              [DeclareHelper
                 [Declare ("greeting",Ptr Byte);
                  Assign
                    (Value (Var ("greeting",T (0,[Byte; Int; Int64; ... ]))),
                     Apply
                       (Value (Var ("\stack_alloc",Function ([Int],Ptr Byte))),
                        [Value (Lit ("6",Int))]));
                  Assign
                    (Index
                       (Value (Var ("greeting",T (0,[Byte; Int; Int64; ... ]))),
                        Value (Lit ("0",Int))),Value (Lit ("'H'",Byte)));
                  Assign
                    (Index
                       (Value (Var ("greeting",T (0,[Byte; Int; Int64; ... ]))),
                        Value (Lit ("1",Int))),Value (Lit ("'e'",Byte)));
                  Assign
                    (Index
                       (Value (Var ("greeting",T (0,[Byte; Int; Int64; ... ]))),
                        Value (Lit ("2",Int))),Value (Lit ("'l'",Byte)));
                  Assign
                    (Index
                       (Value (Var ("greeting",T (0,[Byte; Int; Int64; ... ]))),
                        Value (Lit ("3",Int))),Value (Lit ("'l'",Byte)));
                  Assign
                    (Index
                       (Value (Var ("greeting",T (0,[Byte; Int; Int64; ... ]))),
                        Value (Lit ("4",Int))),Value (Lit ("'o'",Byte)));
                  Assign
                    (Index
                       (Value (Var ("greeting",T (0,[Byte; Int; Int64; ... ]))),
                        Value (Lit ("5",Int))),Value (Lit ("'\0'",Byte)))];
               Apply
                 (Value (Var ("printf",T (0,[Byte; Int; Int64; ... ]))),
                  [Value (Lit (""Greeting message: %s\n"",Ptr Byte));
                   Value (Var ("greeting",T (0,[Byte; Int; Int64; ... ])))]);
               Return (Value (Lit ("0",Int)))]))]]
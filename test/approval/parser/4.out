GlobalParse
  [DeclareHelper
     [Declare ("func",Function ([],Void));
      Assign (Value (Var ("func",Function ([],Void))),Function ([],Block []))];
   DeclareHelper
     [Declare ("count",Int);
      Assign
        (Value (Var ("count",T (0,[Byte; Int; Int64; ... ]))),
         Value (Lit ("5",Int)))];
   DeclareHelper
     [Declare ("main",Function2 Int);
      Assign
        (Value (Var ("main",Function2 Int)),
         Function
           ([],
            Block
              [While
                 (Apply
                    (Value (Var ("+",T (0,[Byte; Int; Int64; ... ]))),
                     [Assign
                        (Value (Var ("count",T (0,[Byte; Int; Int64; ... ]))),
                         Apply
                           (Value (Var ("-",T (0,[Byte; Int; Int64; ... ]))),
                            [Value
                               (Var ("count",T (0,[Byte; Int; Int64; ... ])));
                             Value (Lit ("1",Int))])); Value (Lit ("1",Int))]),
                  Block
                    [Apply
                       (Value (Var ("func",T (0,[Byte; Int; Int64; ... ]))),[])]);
               Return (Value (Lit ("0",Int)))]))];
   DeclareHelper
     [Declare ("func",Function ([],Void));
      Assign
        (Value (Var ("func",Function ([],Void))),
         Function
           ([],
            Block
              [DeclareHelper
                 [Declare ("i",Int);
                  Assign
                    (Value (Var ("i",T (0,[Byte; Int; Int64; ... ]))),
                     Value (Lit ("5",Int)))];
               Apply
                 (Value (Var ("-",T (0,[Byte; Int; Int64; ... ]))),
                  [Assign
                     (Value (Var ("i",T (0,[Byte; Int; Int64; ... ]))),
                      Apply
                        (Value (Var ("+",T (0,[Byte; Int; Int64; ... ]))),
                         [Value (Var ("i",T (0,[Byte; Int; Int64; ... ])));
                          Value (Lit ("1",Int))])); Value (Lit ("1",Int))]);
               Apply
                 (Value (Var ("printf",T (0,[Byte; Int; Int64; ... ]))),
                  [Value (Lit (""i is %d and count is %d\n"",Ptr Byte));
                   Value (Var ("i",T (0,[Byte; Int; Int64; ... ])));
                   Value (Var ("count",T (0,[Byte; Int; Int64; ... ])))])]))]]
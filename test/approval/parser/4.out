GlobalParse
  [DeclareHelper
     [Declare ("func",Function ([],Void));
      Assign (Value (Var ("func",Function ([],Void))),Function ([],Block []))];
   DeclareHelper
     [Declare ("count",Int);
      Assign (Value (Var ("count",Int)),Value (Lit ("5",Int)))];
   DeclareHelper
     [Declare ("main",Function ([Unknown []],Int));
      Assign
        (Value (Var ("main",Function ([Unknown []],Int))),
         Function
           ([(".", Unknown [])],
            Block
              [While
                 (Apply
                    (Value (Var ("+",Unknown [])),
                     [Assign
                        (Value (Var ("count",Unknown [])),
                         Apply
                           (Value (Var ("-",Unknown [])),
                            [Value (Var ("count",Unknown []));
                             Value (Lit ("1",Int))])); Value (Lit ("1",Int))]),
                  Block [Apply (Value (Var ("func",Unknown [])),[])]);
               Return (Value (Lit ("0",Int)))]))];
   DeclareHelper
     [Declare ("func",Function ([],Void));
      Assign
        (Value (Var ("func",Function ([],Void))),
         Function
           ([],
            Block
              [DeclareHelper
                 [Declare ("i",Int);
                  Assign (Value (Var ("i",Int)),Value (Lit ("5",Int)))];
               Apply
                 (Value (Var ("-",Unknown [])),
                  [Assign
                     (Value (Var ("i",Unknown [])),
                      Apply
                        (Value (Var ("+",Unknown [])),
                         [Value (Var ("i",Unknown [])); Value (Lit ("1",Int))]));
                   Value (Lit ("1",Int))]);
               Apply
                 (Value (Var ("printf",Unknown [])),
                  [Value
                     (Lit (""i is %d and count is %d\n"",Pointer (Char,Some 28)));
                   Value (Var ("i",Unknown []));
                   Value (Var ("count",Unknown []))])]))]]
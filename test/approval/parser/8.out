GlobalParse
  [DeclareHelper
     [Declare ("max",Function ([Int; Int],Int));
      Assign
        (Value (Var ("max",Function ([Int; Int],Int))),
         Function ([("num1", Int); ("num2", Int)],Block []))];
   DeclareHelper
     [Declare ("main",Function2 Int);
      Assign
        (Value (Var ("main",Function2 Int)),
         Function
           ([],
            Block
              [DeclareHelper
                 [Declare ("a",Int);
                  Assign
                    (Value (Var ("a",T (0,[Byte; Int; Int64; ... ]))),
                     Value (Lit ("100",Int)))];
               DeclareHelper
                 [Declare ("b",Int);
                  Assign
                    (Value (Var ("b",T (0,[Byte; Int; Int64; ... ]))),
                     Value (Lit ("200",Int)))];
               DeclareHelper [Declare ("ret",Int)];
               Assign
                 (Value (Var ("ret",T (0,[Byte; Int; Int64; ... ]))),
                  Apply
                    (Value (Var ("max",T (0,[Byte; Int; Int64; ... ]))),
                     [Value (Var ("a",T (0,[Byte; Int; Int64; ... ])));
                      Value (Var ("b",T (0,[Byte; Int; Int64; ... ])))]));
               Apply
                 (Value (Var ("printf",T (0,[Byte; Int; Int64; ... ]))),
                  [Value (Lit (""Max value is : %d\n"",Ptr Byte));
                   Value (Var ("ret",T (0,[Byte; Int; Int64; ... ])))]);
               Return (Value (Lit ("0",Int)))]))];
   DeclareHelper
     [Declare ("max",Function ([Int; Int],Int));
      Assign
        (Value (Var ("max",Function ([Int; Int],Int))),
         Function
           ([("num1", Int); ("num2", Int)],
            Block
              [DeclareHelper [Declare ("result",Int)];
               If
                 (Apply
                    (Value
                       (Var
                          (">",
                           Function
                             ([T (0,Value is not created.);
                               T (0,[Byte; Int; Int64; ... ])],Byte))),
                     [Value (Var ("num1",T (0,[Byte; Int; Int64; ... ])));
                      Value (Var ("num2",T (0,[Byte; Int; Int64; ... ])))]),
                  Block
                    [Assign
                       (Value (Var ("result",T (0,[Byte; Int; Int64; ... ]))),
                        Value (Var ("num1",T (0,[Byte; Int; Int64; ... ]))))],
                  Block
                    [Assign
                       (Value (Var ("result",T (0,[Byte; Int; Int64; ... ]))),
                        Value (Var ("num2",T (0,[Byte; Int; Int64; ... ]))))]);
               Return (Value (Var ("result",T (0,[Byte; Int; Int64; ... ]))))]))]]